---
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import { getCollection } from "astro:content";
import { partition, sortBy } from "lodash-es";

type Props = {
  season: number;
  round: number;
};

const { season, round } = Astro.props;

const allRaces = await getCollection("results");
const roundResults = allRaces.filter(
  ({ data: { season: raceSeason, round: raceRound } }) =>
    raceSeason === season && raceRound === round
);

async function resolveReferences({ data }: CollectionEntry<"results">) {
  const constructor = await getEntry(data.constructorId);
  const driver = await getEntry(data.driverId);

  return {
    ...data,
    driver: driver.data,
    constructor: constructor.data,
  };
}

const orderedResults = await Promise.all(
  sortBy(roundResults, ({ data: { position } }) => position).map(
    resolveReferences
  )
);

const thClasses = "px-6 py-3 text-left";
---

<table class="table-fixed bg-red-100 border-red-400 border-2">
  <thead class="text-sm text-red-900 uppercase">
    <tr>
      <th scope="col" class={thClasses}>Position</th>
      <th scope="col" class={thClasses}>Grid diff</th>
      <th scope="col" class={thClasses}>Driver</th>
      <th scope="col" class={thClasses}>Constructor</th>
      <th scope="col" class={thClasses}>Points</th>
      <th scope="col" class={thClasses}>Details</th>
    </tr>
  </thead>
  <tbody>
    {
      orderedResults.map(
        ({
          position,
          driver,
          constructor,
          differenceGridPosition,
          points,
          status,
        }) => (
          <tr class="border-gray-200">
            <td scope="row" class="p-4 w-16">
              {position}
            </td>
            <td class="p-4 w-16">{differenceGridPosition}</td>
            <td class="p-4 w-64">
              {driver.name} {driver.familyName}
            </td>
            <td class="p-4 w-48">{constructor.name}</td>
            <td class="p-4 w-16">{points}</td>
            <td class="p-4 w-48">
              {status !== "Finished" ? (
                <span
                  class={
                    status.startsWith("+")
                      ? "text-slate-700"
                      : "text-red-500 font-bold"
                  }
                >
                  {status}
                </span>
              ) : (
                "-"
              )}
            </td>
          </tr>
        )
      )
    }
  </tbody>
</table>
